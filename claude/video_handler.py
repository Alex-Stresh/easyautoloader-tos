#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from video_downloader import download_youtube_video, get_random_video_from_playlist
from video_processor import (
    generate_subtitles, 
    add_subtitles_to_video, 
    combine_videos, 
    split_video
)

class VideoProcessor:
    def __init__(
        self, 
        main_video_url=None, 
        background_playlist_url=None,
        background_video_url=None,
        output_folder="output_parts",
        final_video="final_full.mp4",
        subtitles_video="main_with_subtitles.mp4",
        final_with_subtitles="final_with_subtitles.mp4"
    ):
        self.main_video_url = main_video_url
        self.background_playlist_url = background_playlist_url
        self.background_video_url = background_video_url
        self.output_folder = output_folder
        self.final_video = final_video
        self.subtitles_video = subtitles_video
        self.final_with_subtitles = final_with_subtitles
        
        self.main_video_file = "downloaded_main.mp4"
        self.background_video_file = "downloaded_background.mp4"
        self.subtitles_file = "subtitles.srt"
        self.audio_file = "audio.aac"
        
    def process(self):
        try:
            # –®–∞–≥ 1: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
            print("üîª –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–∏–¥–µ–æ...")
            self.main_video_file = download_youtube_video(self.main_video_url, self.main_video_file)
            print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {self.main_video_file}")
            
            # –í—ã–±–æ—Ä —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω URL –ø–ª–µ–π–ª–∏—Å—Ç–∞
            if self.background_playlist_url and not self.background_video_url:
                self.background_video_url = get_random_video_from_playlist(self.background_playlist_url)
                if not self.background_video_url:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞")
                    return False
            
            print("üîª –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ...")
            self.background_video_file = download_youtube_video(self.background_video_url, self.background_video_file)
            print(f"‚úÖ –§–æ–Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {self.background_video_file}")
            
            # –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—É–±—Ç–∏—Ç—Ä–æ–≤
            self.subtitles_file = generate_subtitles(self.main_video_file, self.subtitles_file)
            
            # –®–∞–≥ 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –≤–∏–¥–µ–æ
            self.subtitles_video = add_subtitles_to_video(
                self.main_video_file, 
                self.subtitles_file, 
                self.subtitles_video
            )
            
            # –®–∞–≥ 4: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ
            self.final_with_subtitles = combine_videos(
                self.subtitles_video,
                self.background_video_file,
                self.final_with_subtitles
            )
            
            # –®–∞–≥ 5: –†–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
            output_folder = split_video(self.final_with_subtitles, self.output_folder)
            
            print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–∞—Ä–µ–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ: {output_folder}")
            print(f"‚úÖ –ò—Ç–æ–≥–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏: {self.final_with_subtitles}")
            
            # –®–∞–≥ 6: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            self.cleanup()
            
            return True
            
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            return False
    
    def cleanup(self):
        """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ"""
        print("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        files_to_remove = [
            self.main_video_file,
            self.background_video_file,
            self.subtitles_file,
            self.audio_file,
            self.subtitles_video,
            self.final_with_subtitles
        ]
        
        for file in files_to_remove:
            if os.path.exists(file):
                try:
                    os.remove(file)
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file}")
                except Exception as e:
                    print(f"  ‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file}: {e}")
        
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –≤ –ø–∞–ø–∫–µ.")